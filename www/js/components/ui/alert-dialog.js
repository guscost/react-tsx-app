define(["require", "exports", "react/jsx-runtime", "@radix-ui/react-alert-dialog", "@/lib/utils", "@/components/ui/button"], function (require, exports, jsx_runtime_1, AlertDialogPrimitive, utils_1, button_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AlertDialog = AlertDialog;
    exports.AlertDialogPortal = AlertDialogPortal;
    exports.AlertDialogOverlay = AlertDialogOverlay;
    exports.AlertDialogTrigger = AlertDialogTrigger;
    exports.AlertDialogContent = AlertDialogContent;
    exports.AlertDialogHeader = AlertDialogHeader;
    exports.AlertDialogFooter = AlertDialogFooter;
    exports.AlertDialogTitle = AlertDialogTitle;
    exports.AlertDialogDescription = AlertDialogDescription;
    exports.AlertDialogAction = AlertDialogAction;
    exports.AlertDialogCancel = AlertDialogCancel;
    function AlertDialog({ ...props }) {
        return (0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Root, { "data-slot": "alert-dialog", ...props });
    }
    function AlertDialogTrigger({ ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Trigger, { "data-slot": "alert-dialog-trigger", ...props }));
    }
    function AlertDialogPortal({ ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Portal, { "data-slot": "alert-dialog-portal", ...props }));
    }
    function AlertDialogOverlay({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Overlay, { "data-slot": "alert-dialog-overlay", className: (0, utils_1.cn)("data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80", className), ...props }));
    }
    function AlertDialogContent({ className, ...props }) {
        return ((0, jsx_runtime_1.jsxs)(AlertDialogPortal, { children: [(0, jsx_runtime_1.jsx)(AlertDialogOverlay, {}), (0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Content, { "data-slot": "alert-dialog-content", className: (0, utils_1.cn)("bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg", className), ...props })] }));
    }
    function AlertDialogHeader({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "alert-dialog-header", className: (0, utils_1.cn)("flex flex-col gap-2 text-center sm:text-left", className), ...props }));
    }
    function AlertDialogFooter({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("div", { "data-slot": "alert-dialog-footer", className: (0, utils_1.cn)("flex flex-col-reverse gap-2 sm:flex-row sm:justify-end", className), ...props }));
    }
    function AlertDialogTitle({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Title, { "data-slot": "alert-dialog-title", className: (0, utils_1.cn)("text-lg font-semibold", className), ...props }));
    }
    function AlertDialogDescription({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Description, { "data-slot": "alert-dialog-description", className: (0, utils_1.cn)("text-muted-foreground text-sm", className), ...props }));
    }
    function AlertDialogAction({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Action, { className: (0, utils_1.cn)((0, button_1.buttonVariants)(), className), ...props }));
    }
    function AlertDialogCancel({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)(AlertDialogPrimitive.Cancel, { className: (0, utils_1.cn)((0, button_1.buttonVariants)({ variant: "outline" }), className), ...props }));
    }
});
//# sourceMappingURL=data:application/json;base64,