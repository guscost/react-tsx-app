define(["require", "exports", "react/jsx-runtime", "@radix-ui/react-slot", "lucide-react", "@/lib/utils"], function (require, exports, jsx_runtime_1, react_slot_1, lucide_react_1, utils_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Breadcrumb = Breadcrumb;
    exports.BreadcrumbList = BreadcrumbList;
    exports.BreadcrumbItem = BreadcrumbItem;
    exports.BreadcrumbLink = BreadcrumbLink;
    exports.BreadcrumbPage = BreadcrumbPage;
    exports.BreadcrumbSeparator = BreadcrumbSeparator;
    exports.BreadcrumbEllipsis = BreadcrumbEllipsis;
    function Breadcrumb({ ...props }) {
        return (0, jsx_runtime_1.jsx)("nav", { "aria-label": "breadcrumb", "data-slot": "breadcrumb", ...props });
    }
    function BreadcrumbList({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("ol", { "data-slot": "breadcrumb-list", className: (0, utils_1.cn)("text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5", className), ...props }));
    }
    function BreadcrumbItem({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("li", { "data-slot": "breadcrumb-item", className: (0, utils_1.cn)("inline-flex items-center gap-1.5", className), ...props }));
    }
    function BreadcrumbLink({ asChild, className, ...props }) {
        const Comp = asChild ? react_slot_1.Slot : "a";
        return ((0, jsx_runtime_1.jsx)(Comp, { "data-slot": "breadcrumb-link", className: (0, utils_1.cn)("hover:text-foreground transition-colors", className), ...props }));
    }
    function BreadcrumbPage({ className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("span", { "data-slot": "breadcrumb-page", role: "link", "aria-disabled": "true", "aria-current": "page", className: (0, utils_1.cn)("text-foreground font-normal", className), ...props }));
    }
    function BreadcrumbSeparator({ children, className, ...props }) {
        return ((0, jsx_runtime_1.jsx)("li", { "data-slot": "breadcrumb-separator", role: "presentation", "aria-hidden": "true", className: (0, utils_1.cn)("[&>svg]:size-3.5", className), ...props, children: children !== null && children !== void 0 ? children : (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, {}) }));
    }
    function BreadcrumbEllipsis({ className, ...props }) {
        return ((0, jsx_runtime_1.jsxs)("span", { "data-slot": "breadcrumb-ellipsis", role: "presentation", "aria-hidden": "true", className: (0, utils_1.cn)("flex size-9 items-center justify-center", className), ...props, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.MoreHorizontal, { className: "size-4" }), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "More" })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnJlYWRjcnVtYi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3VpL2JyZWFkY3J1bWIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztJQXFHRSxnQ0FBVTtJQUNWLHdDQUFjO0lBQ2Qsd0NBQWM7SUFDZCx3Q0FBYztJQUNkLHdDQUFjO0lBQ2Qsa0RBQW1CO0lBQ25CLGdEQUFrQjtJQXJHcEIsU0FBUyxVQUFVLENBQUMsRUFBRSxHQUFHLEtBQUssRUFBK0I7UUFDM0QsT0FBTyw4Q0FBZ0IsWUFBWSxlQUFXLFlBQVksS0FBSyxLQUFLLEdBQUksQ0FBQztJQUMzRSxDQUFDO0lBRUQsU0FBUyxjQUFjLENBQUMsRUFBRSxTQUFTLEVBQUUsR0FBRyxLQUFLLEVBQThCO1FBQ3pFLE9BQU8sQ0FDTCw0Q0FDWSxpQkFBaUIsRUFDM0IsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUNYLDBGQUEwRixFQUMxRixTQUFTLENBQ1YsS0FDRyxLQUFLLEdBQ1QsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVELFNBQVMsY0FBYyxDQUFDLEVBQUUsU0FBUyxFQUFFLEdBQUcsS0FBSyxFQUE4QjtRQUN6RSxPQUFPLENBQ0wsNENBQ1ksaUJBQWlCLEVBQzNCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyxrQ0FBa0MsRUFBRSxTQUFTLENBQUMsS0FDeEQsS0FBSyxHQUNULENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLGNBQWMsQ0FBQyxFQUN0QixPQUFPLEVBQ1AsU0FBUyxFQUNULEdBQUcsS0FBSyxFQUdUO1FBQ0MsTUFBTSxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxpQkFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFFbEMsT0FBTyxDQUNMLHVCQUFDLElBQUksaUJBQ08saUJBQWlCLEVBQzNCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyx5Q0FBeUMsRUFBRSxTQUFTLENBQUMsS0FDL0QsS0FBSyxHQUNULENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLGNBQWMsQ0FBQyxFQUFFLFNBQVMsRUFBRSxHQUFHLEtBQUssRUFBZ0M7UUFDM0UsT0FBTyxDQUNMLDhDQUNZLGlCQUFpQixFQUMzQixJQUFJLEVBQUMsTUFBTSxtQkFDRyxNQUFNLGtCQUNQLE1BQU0sRUFDbkIsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLDZCQUE2QixFQUFFLFNBQVMsQ0FBQyxLQUNuRCxLQUFLLEdBQ1QsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVELFNBQVMsbUJBQW1CLENBQUMsRUFDM0IsUUFBUSxFQUNSLFNBQVMsRUFDVCxHQUFHLEtBQUssRUFDbUI7UUFDM0IsT0FBTyxDQUNMLDRDQUNZLHNCQUFzQixFQUNoQyxJQUFJLEVBQUMsY0FBYyxpQkFDUCxNQUFNLEVBQ2xCLFNBQVMsRUFBRSxJQUFBLFVBQUUsRUFBQyxrQkFBa0IsRUFBRSxTQUFTLENBQUMsS0FDeEMsS0FBSyxZQUVSLFFBQVEsYUFBUixRQUFRLGNBQVIsUUFBUSxHQUFJLHVCQUFDLDJCQUFZLEtBQUcsR0FDMUIsQ0FDTixDQUFDO0lBQ0osQ0FBQztJQUVELFNBQVMsa0JBQWtCLENBQUMsRUFDMUIsU0FBUyxFQUNULEdBQUcsS0FBSyxFQUNxQjtRQUM3QixPQUFPLENBQ0wsK0NBQ1kscUJBQXFCLEVBQy9CLElBQUksRUFBQyxjQUFjLGlCQUNQLE1BQU0sRUFDbEIsU0FBUyxFQUFFLElBQUEsVUFBRSxFQUFDLHlDQUF5QyxFQUFFLFNBQVMsQ0FBQyxLQUMvRCxLQUFLLGFBRVQsdUJBQUMsNkJBQWMsSUFBQyxTQUFTLEVBQUMsUUFBUSxHQUFHLEVBQ3JDLGlDQUFNLFNBQVMsRUFBQyxTQUFTLHFCQUFZLElBQ2hDLENBQ1IsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFNsb3QgfSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LXNsb3RcIjtcbmltcG9ydCB7IENoZXZyb25SaWdodCwgTW9yZUhvcml6b250YWwgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XG5cbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCI7XG5cbmZ1bmN0aW9uIEJyZWFkY3J1bWIoeyAuLi5wcm9wcyB9OiBSZWFjdC5Db21wb25lbnRQcm9wczxcIm5hdlwiPikge1xuICByZXR1cm4gPG5hdiBhcmlhLWxhYmVsPVwiYnJlYWRjcnVtYlwiIGRhdGEtc2xvdD1cImJyZWFkY3J1bWJcIiB7Li4ucHJvcHN9IC8+O1xufVxuXG5mdW5jdGlvbiBCcmVhZGNydW1iTGlzdCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfTogUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJvbFwiPikge1xuICByZXR1cm4gKFxuICAgIDxvbFxuICAgICAgZGF0YS1zbG90PVwiYnJlYWRjcnVtYi1saXN0XCJcbiAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgIFwidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZsZXggZmxleC13cmFwIGl0ZW1zLWNlbnRlciBnYXAtMS41IHRleHQtc20gYnJlYWstd29yZHMgc206Z2FwLTIuNVwiLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICApfVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4gICk7XG59XG5cbmZ1bmN0aW9uIEJyZWFkY3J1bWJJdGVtKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9OiBSZWFjdC5Db21wb25lbnRQcm9wczxcImxpXCI+KSB7XG4gIHJldHVybiAoXG4gICAgPGxpXG4gICAgICBkYXRhLXNsb3Q9XCJicmVhZGNydW1iLWl0ZW1cIlxuICAgICAgY2xhc3NOYW1lPXtjbihcImlubGluZS1mbGV4IGl0ZW1zLWNlbnRlciBnYXAtMS41XCIsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgLz5cbiAgKTtcbn1cblxuZnVuY3Rpb24gQnJlYWRjcnVtYkxpbmsoe1xuICBhc0NoaWxkLFxuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczxcImFcIj4gJiB7XG4gIGFzQ2hpbGQ/OiBib29sZWFuO1xufSkge1xuICBjb25zdCBDb21wID0gYXNDaGlsZCA/IFNsb3QgOiBcImFcIjtcblxuICByZXR1cm4gKFxuICAgIDxDb21wXG4gICAgICBkYXRhLXNsb3Q9XCJicmVhZGNydW1iLWxpbmtcIlxuICAgICAgY2xhc3NOYW1lPXtjbihcImhvdmVyOnRleHQtZm9yZWdyb3VuZCB0cmFuc2l0aW9uLWNvbG9yc1wiLCBjbGFzc05hbWUpfVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4gICk7XG59XG5cbmZ1bmN0aW9uIEJyZWFkY3J1bWJQYWdlKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9OiBSZWFjdC5Db21wb25lbnRQcm9wczxcInNwYW5cIj4pIHtcbiAgcmV0dXJuIChcbiAgICA8c3BhblxuICAgICAgZGF0YS1zbG90PVwiYnJlYWRjcnVtYi1wYWdlXCJcbiAgICAgIHJvbGU9XCJsaW5rXCJcbiAgICAgIGFyaWEtZGlzYWJsZWQ9XCJ0cnVlXCJcbiAgICAgIGFyaWEtY3VycmVudD1cInBhZ2VcIlxuICAgICAgY2xhc3NOYW1lPXtjbihcInRleHQtZm9yZWdyb3VuZCBmb250LW5vcm1hbFwiLCBjbGFzc05hbWUpfVxuICAgICAgey4uLnByb3BzfVxuICAgIC8+XG4gICk7XG59XG5cbmZ1bmN0aW9uIEJyZWFkY3J1bWJTZXBhcmF0b3Ioe1xuICBjaGlsZHJlbixcbiAgY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogUmVhY3QuQ29tcG9uZW50UHJvcHM8XCJsaVwiPikge1xuICByZXR1cm4gKFxuICAgIDxsaVxuICAgICAgZGF0YS1zbG90PVwiYnJlYWRjcnVtYi1zZXBhcmF0b3JcIlxuICAgICAgcm9sZT1cInByZXNlbnRhdGlvblwiXG4gICAgICBhcmlhLWhpZGRlbj1cInRydWVcIlxuICAgICAgY2xhc3NOYW1lPXtjbihcIlsmPnN2Z106c2l6ZS0zLjVcIiwgY2xhc3NOYW1lKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+XG4gICAgICB7Y2hpbGRyZW4gPz8gPENoZXZyb25SaWdodCAvPn1cbiAgICA8L2xpPlxuICApO1xufVxuXG5mdW5jdGlvbiBCcmVhZGNydW1iRWxsaXBzaXMoe1xuICBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBSZWFjdC5Db21wb25lbnRQcm9wczxcInNwYW5cIj4pIHtcbiAgcmV0dXJuIChcbiAgICA8c3BhblxuICAgICAgZGF0YS1zbG90PVwiYnJlYWRjcnVtYi1lbGxpcHNpc1wiXG4gICAgICByb2xlPVwicHJlc2VudGF0aW9uXCJcbiAgICAgIGFyaWEtaGlkZGVuPVwidHJ1ZVwiXG4gICAgICBjbGFzc05hbWU9e2NuKFwiZmxleCBzaXplLTkgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCIsIGNsYXNzTmFtZSl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPlxuICAgICAgPE1vcmVIb3Jpem9udGFsIGNsYXNzTmFtZT1cInNpemUtNFwiIC8+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9XCJzci1vbmx5XCI+TW9yZTwvc3Bhbj5cbiAgICA8L3NwYW4+XG4gICk7XG59XG5cbmV4cG9ydCB7XG4gIEJyZWFkY3J1bWIsXG4gIEJyZWFkY3J1bWJMaXN0LFxuICBCcmVhZGNydW1iSXRlbSxcbiAgQnJlYWRjcnVtYkxpbmssXG4gIEJyZWFkY3J1bWJQYWdlLFxuICBCcmVhZGNydW1iU2VwYXJhdG9yLFxuICBCcmVhZGNydW1iRWxsaXBzaXMsXG59O1xuIl19