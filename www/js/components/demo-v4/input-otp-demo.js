define(["require", "exports", "react/jsx-runtime", "react", "input-otp", "@/components/ui/input-otp", "@/components/ui/label"], function (require, exports, jsx_runtime_1, React, input_otp_1, input_otp_2, label_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.InputOTPDemo = InputOTPDemo;
    function InputOTPDemo() {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col flex-wrap gap-6 md:flex-row", children: [(0, jsx_runtime_1.jsx)(InputOTPSimple, {}), (0, jsx_runtime_1.jsx)(InputOTPPattern, {}), (0, jsx_runtime_1.jsx)(InputOTPWithSeparator, {}), (0, jsx_runtime_1.jsx)(InputOTPWithSpacing, {})] }));
    }
    function InputOTPSimple() {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "simple", children: "Simple" }), (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTP, { id: "simple", maxLength: 6, children: [(0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 0 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 1 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 2 })] }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSeparator, {}), (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 3 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 4 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 5 })] })] })] }));
    }
    function InputOTPPattern() {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "digits-only", children: "Digits Only" }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTP, { id: "digits-only", maxLength: 6, pattern: input_otp_1.REGEXP_ONLY_DIGITS, children: (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 0 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 1 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 2 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 3 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 4 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 5 })] }) })] }));
    }
    function InputOTPWithSeparator() {
        const [value, setValue] = React.useState("123456");
        return ((0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "with-separator", children: "With Separator" }), (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTP, { id: "with-separator", maxLength: 6, value: value, onChange: setValue, children: [(0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 0 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 1 })] }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSeparator, {}), (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 2 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 3 })] }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSeparator, {}), (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 4 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 5 })] })] })] }));
    }
    function InputOTPWithSpacing() {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "with-spacing", children: "With Spacing" }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTP, { id: "with-spacing", maxLength: 6, children: (0, jsx_runtime_1.jsxs)(input_otp_2.InputOTPGroup, { className: "gap-2 *:data-[slot=input-otp-slot]:rounded-md *:data-[slot=input-otp-slot]:border", children: [(0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 0 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 1 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 2 }), (0, jsx_runtime_1.jsx)(input_otp_2.InputOTPSlot, { index: 3 })] }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtb3RwLWRlbW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLXY0L2lucHV0LW90cC1kZW1vLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7SUFhYixvQ0FTQztJQVRELFNBQWdCLFlBQVk7UUFDMUIsT0FBTyxDQUNMLGlDQUFLLFNBQVMsRUFBQywyQ0FBMkMsYUFDeEQsdUJBQUMsY0FBYyxLQUFHLEVBQ2xCLHVCQUFDLGVBQWUsS0FBRyxFQUNuQix1QkFBQyxxQkFBcUIsS0FBRyxFQUN6Qix1QkFBQyxtQkFBbUIsS0FBRyxJQUNuQixDQUNQLENBQUM7SUFDSixDQUFDO0lBRUQsU0FBUyxjQUFjO1FBQ3JCLE9BQU8sQ0FDTCxpQ0FBSyxTQUFTLEVBQUMsWUFBWSxhQUN6Qix1QkFBQyxhQUFLLElBQUMsT0FBTyxFQUFDLFFBQVEsdUJBQWUsRUFDdEMsd0JBQUMsb0JBQVEsSUFBQyxFQUFFLEVBQUMsUUFBUSxFQUFDLFNBQVMsRUFBRSxDQUFDLGFBQ2hDLHdCQUFDLHlCQUFhLGVBQ1osdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxFQUMxQix1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksSUFDWixFQUNoQix1QkFBQyw2QkFBaUIsS0FBRyxFQUNyQix3QkFBQyx5QkFBYSxlQUNaLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxFQUMxQix1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksRUFDMUIsdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLElBQ1osSUFDUCxJQUNQLENBQ1AsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLGVBQWU7UUFDdEIsT0FBTyxDQUNMLGlDQUFLLFNBQVMsRUFBQyxZQUFZLGFBQ3pCLHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUMsYUFBYSw0QkFBb0IsRUFDaEQsdUJBQUMsb0JBQVEsSUFBQyxFQUFFLEVBQUMsYUFBYSxFQUFDLFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLDhCQUFrQixZQUNsRSx3QkFBQyx5QkFBYSxlQUNaLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxFQUMxQix1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksRUFDMUIsdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxFQUMxQix1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksRUFDMUIsdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLElBQ1osR0FDUCxJQUNQLENBQ1AsQ0FBQztJQUNKLENBQUM7SUFFRCxTQUFTLHFCQUFxQjtRQUM1QixNQUFNLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFbkQsT0FBTyxDQUNMLGlDQUFLLFNBQVMsRUFBQyxZQUFZLGFBQ3pCLHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUMsZ0JBQWdCLCtCQUF1QixFQUN0RCx3QkFBQyxvQkFBUSxJQUNQLEVBQUUsRUFBQyxnQkFBZ0IsRUFDbkIsU0FBUyxFQUFFLENBQUMsRUFDWixLQUFLLEVBQUUsS0FBSyxFQUNaLFFBQVEsRUFBRSxRQUFRLGFBRWxCLHdCQUFDLHlCQUFhLGVBQ1osdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxJQUNaLEVBQ2hCLHVCQUFDLDZCQUFpQixLQUFHLEVBQ3JCLHdCQUFDLHlCQUFhLGVBQ1osdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxJQUNaLEVBQ2hCLHVCQUFDLDZCQUFpQixLQUFHLEVBQ3JCLHdCQUFDLHlCQUFhLGVBQ1osdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxJQUNaLElBQ1AsSUFDUCxDQUNQLENBQUM7SUFDSixDQUFDO0lBRUQsU0FBUyxtQkFBbUI7UUFDMUIsT0FBTyxDQUNMLGlDQUFLLFNBQVMsRUFBQyxZQUFZLGFBQ3pCLHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUMsY0FBYyw2QkFBcUIsRUFDbEQsdUJBQUMsb0JBQVEsSUFBQyxFQUFFLEVBQUMsY0FBYyxFQUFDLFNBQVMsRUFBRSxDQUFDLFlBQ3RDLHdCQUFDLHlCQUFhLElBQUMsU0FBUyxFQUFDLG1GQUFtRixhQUMxRyx1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksRUFDMUIsdUJBQUMsd0JBQVksSUFBQyxLQUFLLEVBQUUsQ0FBQyxHQUFJLEVBQzFCLHVCQUFDLHdCQUFZLElBQUMsS0FBSyxFQUFFLENBQUMsR0FBSSxFQUMxQix1QkFBQyx3QkFBWSxJQUFDLEtBQUssRUFBRSxDQUFDLEdBQUksSUFDWixHQUNQLElBQ1AsQ0FDUCxDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IFJFR0VYUF9PTkxZX0RJR0lUUyB9IGZyb20gXCJpbnB1dC1vdHBcIjtcblxuaW1wb3J0IHtcbiAgSW5wdXRPVFAsXG4gIElucHV0T1RQR3JvdXAsXG4gIElucHV0T1RQU2VwYXJhdG9yLFxuICBJbnB1dE9UUFNsb3QsXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvaW5wdXQtb3RwXCI7XG5pbXBvcnQgeyBMYWJlbCB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvbGFiZWxcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIElucHV0T1RQRGVtbygpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgZmxleC13cmFwIGdhcC02IG1kOmZsZXgtcm93XCI+XG4gICAgICA8SW5wdXRPVFBTaW1wbGUgLz5cbiAgICAgIDxJbnB1dE9UUFBhdHRlcm4gLz5cbiAgICAgIDxJbnB1dE9UUFdpdGhTZXBhcmF0b3IgLz5cbiAgICAgIDxJbnB1dE9UUFdpdGhTcGFjaW5nIC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIElucHV0T1RQU2ltcGxlKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBnYXAtMlwiPlxuICAgICAgPExhYmVsIGh0bWxGb3I9XCJzaW1wbGVcIj5TaW1wbGU8L0xhYmVsPlxuICAgICAgPElucHV0T1RQIGlkPVwic2ltcGxlXCIgbWF4TGVuZ3RoPXs2fT5cbiAgICAgICAgPElucHV0T1RQR3JvdXA+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17MH0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXsxfSAvPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezJ9IC8+XG4gICAgICAgIDwvSW5wdXRPVFBHcm91cD5cbiAgICAgICAgPElucHV0T1RQU2VwYXJhdG9yIC8+XG4gICAgICAgIDxJbnB1dE9UUEdyb3VwPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezN9IC8+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17NH0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXs1fSAvPlxuICAgICAgICA8L0lucHV0T1RQR3JvdXA+XG4gICAgICA8L0lucHV0T1RQPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBJbnB1dE9UUFBhdHRlcm4oKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0yXCI+XG4gICAgICA8TGFiZWwgaHRtbEZvcj1cImRpZ2l0cy1vbmx5XCI+RGlnaXRzIE9ubHk8L0xhYmVsPlxuICAgICAgPElucHV0T1RQIGlkPVwiZGlnaXRzLW9ubHlcIiBtYXhMZW5ndGg9ezZ9IHBhdHRlcm49e1JFR0VYUF9PTkxZX0RJR0lUU30+XG4gICAgICAgIDxJbnB1dE9UUEdyb3VwPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezB9IC8+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17MX0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXsyfSAvPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezN9IC8+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17NH0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXs1fSAvPlxuICAgICAgICA8L0lucHV0T1RQR3JvdXA+XG4gICAgICA8L0lucHV0T1RQPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5mdW5jdGlvbiBJbnB1dE9UUFdpdGhTZXBhcmF0b3IoKSB7XG4gIGNvbnN0IFt2YWx1ZSwgc2V0VmFsdWVdID0gUmVhY3QudXNlU3RhdGUoXCIxMjM0NTZcIik7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ2FwLTJcIj5cbiAgICAgIDxMYWJlbCBodG1sRm9yPVwid2l0aC1zZXBhcmF0b3JcIj5XaXRoIFNlcGFyYXRvcjwvTGFiZWw+XG4gICAgICA8SW5wdXRPVFBcbiAgICAgICAgaWQ9XCJ3aXRoLXNlcGFyYXRvclwiXG4gICAgICAgIG1heExlbmd0aD17Nn1cbiAgICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgICBvbkNoYW5nZT17c2V0VmFsdWV9XG4gICAgICA+XG4gICAgICAgIDxJbnB1dE9UUEdyb3VwPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezB9IC8+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17MX0gLz5cbiAgICAgICAgPC9JbnB1dE9UUEdyb3VwPlxuICAgICAgICA8SW5wdXRPVFBTZXBhcmF0b3IgLz5cbiAgICAgICAgPElucHV0T1RQR3JvdXA+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17Mn0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXszfSAvPlxuICAgICAgICA8L0lucHV0T1RQR3JvdXA+XG4gICAgICAgIDxJbnB1dE9UUFNlcGFyYXRvciAvPlxuICAgICAgICA8SW5wdXRPVFBHcm91cD5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXs0fSAvPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezV9IC8+XG4gICAgICAgIDwvSW5wdXRPVFBHcm91cD5cbiAgICAgIDwvSW5wdXRPVFA+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmZ1bmN0aW9uIElucHV0T1RQV2l0aFNwYWNpbmcoKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0yXCI+XG4gICAgICA8TGFiZWwgaHRtbEZvcj1cIndpdGgtc3BhY2luZ1wiPldpdGggU3BhY2luZzwvTGFiZWw+XG4gICAgICA8SW5wdXRPVFAgaWQ9XCJ3aXRoLXNwYWNpbmdcIiBtYXhMZW5ndGg9ezZ9PlxuICAgICAgICA8SW5wdXRPVFBHcm91cCBjbGFzc05hbWU9XCJnYXAtMiAqOmRhdGEtW3Nsb3Q9aW5wdXQtb3RwLXNsb3RdOnJvdW5kZWQtbWQgKjpkYXRhLVtzbG90PWlucHV0LW90cC1zbG90XTpib3JkZXJcIj5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXswfSAvPlxuICAgICAgICAgIDxJbnB1dE9UUFNsb3QgaW5kZXg9ezF9IC8+XG4gICAgICAgICAgPElucHV0T1RQU2xvdCBpbmRleD17Mn0gLz5cbiAgICAgICAgICA8SW5wdXRPVFBTbG90IGluZGV4PXszfSAvPlxuICAgICAgICA8L0lucHV0T1RQR3JvdXA+XG4gICAgICA8L0lucHV0T1RQPlxuICAgIDwvZGl2PlxuICApO1xufVxuIl19