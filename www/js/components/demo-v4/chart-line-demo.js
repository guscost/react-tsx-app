define(["require", "exports", "react/jsx-runtime", "lucide-react", "recharts", "@/components/ui/card", "@/components/ui/chart"], function (require, exports, jsx_runtime_1, lucide_react_1, recharts_1, card_1, chart_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.description = void 0;
    exports.ChartLineDemo = ChartLineDemo;
    exports.description = "A multiple line chart";
    const chartData = [
        { month: "January", desktop: 186, mobile: 80 },
        { month: "February", desktop: 305, mobile: 200 },
        { month: "March", desktop: 237, mobile: 120 },
        { month: "April", desktop: 73, mobile: 190 },
        { month: "May", desktop: 209, mobile: 130 },
        { month: "June", desktop: 214, mobile: 140 },
    ];
    const chartConfig = {
        desktop: {
            label: "Desktop",
            color: "var(--chart-1)",
        },
        mobile: {
            label: "Mobile",
            color: "var(--chart-2)",
        },
    };
    function ChartLineDemo() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Line Chart - Multiple" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "January - June 2024" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)(chart_1.ChartContainer, { config: chartConfig, children: (0, jsx_runtime_1.jsxs)(recharts_1.LineChart, { accessibilityLayer: true, data: chartData, margin: {
                                left: 12,
                                right: 12,
                            }, children: [(0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { vertical: false }), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "month", tickLine: false, axisLine: false, tickMargin: 8, tickFormatter: (value) => value.slice(0, 3) }), (0, jsx_runtime_1.jsx)(chart_1.ChartTooltip, { cursor: false, content: (0, jsx_runtime_1.jsx)(chart_1.ChartTooltipContent, {}) }), (0, jsx_runtime_1.jsx)(recharts_1.Line, { dataKey: "desktop", type: "monotone", stroke: "var(--color-desktop)", strokeWidth: 2, dot: false }), (0, jsx_runtime_1.jsx)(recharts_1.Line, { dataKey: "mobile", type: "monotone", stroke: "var(--color-mobile)", strokeWidth: 2, dot: false })] }) }) }), (0, jsx_runtime_1.jsx)(card_1.CardFooter, { children: (0, jsx_runtime_1.jsx)("div", { className: "flex w-full items-start gap-2 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 leading-none font-medium", children: ["Trending up by 5.2% this month ", (0, jsx_runtime_1.jsx)(lucide_react_1.TrendingUp, { className: "h-4 w-4" })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-muted-foreground flex items-center gap-2 leading-none", children: "Showing total visitors for the last 6 months" })] }) }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtbGluZS1kZW1vLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZGVtby12NC9jaGFydC1saW5lLWRlbW8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFBQSxZQUFZLENBQUM7Ozs7SUEwQ2Isc0NBeURDO0lBL0VZLFFBQUEsV0FBVyxHQUFHLHVCQUF1QixDQUFDO0lBRW5ELE1BQU0sU0FBUyxHQUFHO1FBQ2hCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUU7UUFDOUMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtRQUNoRCxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFO1FBQzdDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7UUFDNUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtRQUMzQyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFO0tBQzdDLENBQUM7SUFFRixNQUFNLFdBQVcsR0FBRztRQUNsQixPQUFPLEVBQUU7WUFDUCxLQUFLLEVBQUUsU0FBUztZQUNoQixLQUFLLEVBQUUsZ0JBQWdCO1NBQ3hCO1FBQ0QsTUFBTSxFQUFFO1lBQ04sS0FBSyxFQUFFLFFBQVE7WUFDZixLQUFLLEVBQUUsZ0JBQWdCO1NBQ3hCO0tBQ29CLENBQUM7SUFFeEIsU0FBZ0IsYUFBYTtRQUMzQixPQUFPLENBQ0wsd0JBQUMsV0FBSSxlQUNILHdCQUFDLGlCQUFVLGVBQ1QsdUJBQUMsZ0JBQVMsd0NBQWtDLEVBQzVDLHVCQUFDLHNCQUFlLHNDQUFzQyxJQUMzQyxFQUNiLHVCQUFDLGtCQUFXLGNBQ1YsdUJBQUMsc0JBQWMsSUFBQyxNQUFNLEVBQUUsV0FBVyxZQUNqQyx3QkFBQyxvQkFBUyxJQUNSLGtCQUFrQixRQUNsQixJQUFJLEVBQUUsU0FBUyxFQUNmLE1BQU0sRUFBRTtnQ0FDTixJQUFJLEVBQUUsRUFBRTtnQ0FDUixLQUFLLEVBQUUsRUFBRTs2QkFDVixhQUVELHVCQUFDLHdCQUFhLElBQUMsUUFBUSxFQUFFLEtBQUssR0FBSSxFQUNsQyx1QkFBQyxnQkFBSyxJQUNKLE9BQU8sRUFBQyxPQUFPLEVBQ2YsUUFBUSxFQUFFLEtBQUssRUFDZixRQUFRLEVBQUUsS0FBSyxFQUNmLFVBQVUsRUFBRSxDQUFDLEVBQ2IsYUFBYSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsR0FDM0MsRUFDRix1QkFBQyxvQkFBWSxJQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLHVCQUFDLDJCQUFtQixLQUFHLEdBQUksRUFDakUsdUJBQUMsZUFBSSxJQUNILE9BQU8sRUFBQyxTQUFTLEVBQ2pCLElBQUksRUFBQyxVQUFVLEVBQ2YsTUFBTSxFQUFDLHNCQUFzQixFQUM3QixXQUFXLEVBQUUsQ0FBQyxFQUNkLEdBQUcsRUFBRSxLQUFLLEdBQ1YsRUFDRix1QkFBQyxlQUFJLElBQ0gsT0FBTyxFQUFDLFFBQVEsRUFDaEIsSUFBSSxFQUFDLFVBQVUsRUFDZixNQUFNLEVBQUMscUJBQXFCLEVBQzVCLFdBQVcsRUFBRSxDQUFDLEVBQ2QsR0FBRyxFQUFFLEtBQUssR0FDVixJQUNRLEdBQ0csR0FDTCxFQUNkLHVCQUFDLGlCQUFVLGNBQ1QsZ0NBQUssU0FBUyxFQUFDLHVDQUF1QyxZQUNwRCxpQ0FBSyxTQUFTLEVBQUMsWUFBWSxhQUN6QixpQ0FBSyxTQUFTLEVBQUMsa0RBQWtELGdEQUNoQyx1QkFBQyx5QkFBVSxJQUFDLFNBQVMsRUFBQyxTQUFTLEdBQUcsSUFDN0QsRUFDTixnQ0FBSyxTQUFTLEVBQUMsNERBQTRELDZEQUVyRSxJQUNGLEdBQ0YsR0FDSyxJQUNSLENBQ1IsQ0FBQztJQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgVHJlbmRpbmdVcCB9IGZyb20gXCJsdWNpZGUtcmVhY3RcIjtcbmltcG9ydCB7IENhcnRlc2lhbkdyaWQsIExpbmUsIExpbmVDaGFydCwgWEF4aXMgfSBmcm9tIFwicmVjaGFydHNcIjtcblxuaW1wb3J0IHtcbiAgQ2FyZCxcbiAgQ2FyZENvbnRlbnQsXG4gIENhcmREZXNjcmlwdGlvbixcbiAgQ2FyZEZvb3RlcixcbiAgQ2FyZEhlYWRlcixcbiAgQ2FyZFRpdGxlLFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2NhcmRcIjtcbmltcG9ydCB7XG4gIENoYXJ0Q29uZmlnLFxuICBDaGFydENvbnRhaW5lcixcbiAgQ2hhcnRUb29sdGlwLFxuICBDaGFydFRvb2x0aXBDb250ZW50LFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2NoYXJ0XCI7XG5cbmV4cG9ydCBjb25zdCBkZXNjcmlwdGlvbiA9IFwiQSBtdWx0aXBsZSBsaW5lIGNoYXJ0XCI7XG5cbmNvbnN0IGNoYXJ0RGF0YSA9IFtcbiAgeyBtb250aDogXCJKYW51YXJ5XCIsIGRlc2t0b3A6IDE4NiwgbW9iaWxlOiA4MCB9LFxuICB7IG1vbnRoOiBcIkZlYnJ1YXJ5XCIsIGRlc2t0b3A6IDMwNSwgbW9iaWxlOiAyMDAgfSxcbiAgeyBtb250aDogXCJNYXJjaFwiLCBkZXNrdG9wOiAyMzcsIG1vYmlsZTogMTIwIH0sXG4gIHsgbW9udGg6IFwiQXByaWxcIiwgZGVza3RvcDogNzMsIG1vYmlsZTogMTkwIH0sXG4gIHsgbW9udGg6IFwiTWF5XCIsIGRlc2t0b3A6IDIwOSwgbW9iaWxlOiAxMzAgfSxcbiAgeyBtb250aDogXCJKdW5lXCIsIGRlc2t0b3A6IDIxNCwgbW9iaWxlOiAxNDAgfSxcbl07XG5cbmNvbnN0IGNoYXJ0Q29uZmlnID0ge1xuICBkZXNrdG9wOiB7XG4gICAgbGFiZWw6IFwiRGVza3RvcFwiLFxuICAgIGNvbG9yOiBcInZhcigtLWNoYXJ0LTEpXCIsXG4gIH0sXG4gIG1vYmlsZToge1xuICAgIGxhYmVsOiBcIk1vYmlsZVwiLFxuICAgIGNvbG9yOiBcInZhcigtLWNoYXJ0LTIpXCIsXG4gIH0sXG59IHNhdGlzZmllcyBDaGFydENvbmZpZztcblxuZXhwb3J0IGZ1bmN0aW9uIENoYXJ0TGluZURlbW8oKSB7XG4gIHJldHVybiAoXG4gICAgPENhcmQ+XG4gICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgPENhcmRUaXRsZT5MaW5lIENoYXJ0IC0gTXVsdGlwbGU8L0NhcmRUaXRsZT5cbiAgICAgICAgPENhcmREZXNjcmlwdGlvbj5KYW51YXJ5IC0gSnVuZSAyMDI0PC9DYXJkRGVzY3JpcHRpb24+XG4gICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgIDxDaGFydENvbnRhaW5lciBjb25maWc9e2NoYXJ0Q29uZmlnfT5cbiAgICAgICAgICA8TGluZUNoYXJ0XG4gICAgICAgICAgICBhY2Nlc3NpYmlsaXR5TGF5ZXJcbiAgICAgICAgICAgIGRhdGE9e2NoYXJ0RGF0YX1cbiAgICAgICAgICAgIG1hcmdpbj17e1xuICAgICAgICAgICAgICBsZWZ0OiAxMixcbiAgICAgICAgICAgICAgcmlnaHQ6IDEyLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Q2FydGVzaWFuR3JpZCB2ZXJ0aWNhbD17ZmFsc2V9IC8+XG4gICAgICAgICAgICA8WEF4aXNcbiAgICAgICAgICAgICAgZGF0YUtleT1cIm1vbnRoXCJcbiAgICAgICAgICAgICAgdGlja0xpbmU9e2ZhbHNlfVxuICAgICAgICAgICAgICBheGlzTGluZT17ZmFsc2V9XG4gICAgICAgICAgICAgIHRpY2tNYXJnaW49ezh9XG4gICAgICAgICAgICAgIHRpY2tGb3JtYXR0ZXI9eyh2YWx1ZSkgPT4gdmFsdWUuc2xpY2UoMCwgMyl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPENoYXJ0VG9vbHRpcCBjdXJzb3I9e2ZhbHNlfSBjb250ZW50PXs8Q2hhcnRUb29sdGlwQ29udGVudCAvPn0gLz5cbiAgICAgICAgICAgIDxMaW5lXG4gICAgICAgICAgICAgIGRhdGFLZXk9XCJkZXNrdG9wXCJcbiAgICAgICAgICAgICAgdHlwZT1cIm1vbm90b25lXCJcbiAgICAgICAgICAgICAgc3Ryb2tlPVwidmFyKC0tY29sb3ItZGVza3RvcClcIlxuICAgICAgICAgICAgICBzdHJva2VXaWR0aD17Mn1cbiAgICAgICAgICAgICAgZG90PXtmYWxzZX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8TGluZVxuICAgICAgICAgICAgICBkYXRhS2V5PVwibW9iaWxlXCJcbiAgICAgICAgICAgICAgdHlwZT1cIm1vbm90b25lXCJcbiAgICAgICAgICAgICAgc3Ryb2tlPVwidmFyKC0tY29sb3ItbW9iaWxlKVwiXG4gICAgICAgICAgICAgIHN0cm9rZVdpZHRoPXsyfVxuICAgICAgICAgICAgICBkb3Q9e2ZhbHNlfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICA8L0xpbmVDaGFydD5cbiAgICAgICAgPC9DaGFydENvbnRhaW5lcj5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICA8Q2FyZEZvb3Rlcj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IHctZnVsbCBpdGVtcy1zdGFydCBnYXAtMiB0ZXh0LXNtXCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0yXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0yIGxlYWRpbmctbm9uZSBmb250LW1lZGl1bVwiPlxuICAgICAgICAgICAgICBUcmVuZGluZyB1cCBieSA1LjIlIHRoaXMgbW9udGggPFRyZW5kaW5nVXAgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1tdXRlZC1mb3JlZ3JvdW5kIGZsZXggaXRlbXMtY2VudGVyIGdhcC0yIGxlYWRpbmctbm9uZVwiPlxuICAgICAgICAgICAgICBTaG93aW5nIHRvdGFsIHZpc2l0b3JzIGZvciB0aGUgbGFzdCA2IG1vbnRoc1xuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9DYXJkRm9vdGVyPlxuICAgIDwvQ2FyZD5cbiAgKTtcbn1cbiJdfQ==