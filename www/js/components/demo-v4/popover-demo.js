define(["require", "exports", "react/jsx-runtime", "@/components/ui/button", "@/components/ui/input", "@/components/ui/label", "@/components/ui/popover"], function (require, exports, jsx_runtime_1, button_1, input_1, label_1, popover_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PopoverDemo = PopoverDemo;
    function PopoverDemo() {
        return ((0, jsx_runtime_1.jsxs)(popover_1.Popover, { children: [(0, jsx_runtime_1.jsx)(popover_1.PopoverTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", children: "Open popover" }) }), (0, jsx_runtime_1.jsx)(popover_1.PopoverContent, { className: "w-80", align: "start", children: (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-4", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid gap-1.5", children: [(0, jsx_runtime_1.jsx)("h4", { className: "leading-none font-medium", children: "Dimensions" }), (0, jsx_runtime_1.jsx)("p", { className: "text-muted-foreground text-sm", children: "Set the dimensions for the layer." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 items-center gap-4", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "width", children: "Width" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "width", defaultValue: "100%", className: "col-span-2 h-8" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 items-center gap-4", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "maxWidth", children: "Max. width" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "maxWidth", defaultValue: "300px", className: "col-span-2 h-8" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 items-center gap-4", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "height", children: "Height" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "height", defaultValue: "25px", className: "col-span-2 h-8" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "grid grid-cols-3 items-center gap-4", children: [(0, jsx_runtime_1.jsx)(label_1.Label, { htmlFor: "maxHeight", children: "Max. height" }), (0, jsx_runtime_1.jsx)(input_1.Input, { id: "maxHeight", defaultValue: "none", className: "col-span-2 h-8" })] })] })] }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1kZW1vLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZGVtby12NC9wb3BvdmVyLWRlbW8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztJQVNBLGtDQW9EQztJQXBERCxTQUFnQixXQUFXO1FBQ3pCLE9BQU8sQ0FDTCx3QkFBQyxpQkFBTyxlQUNOLHVCQUFDLHdCQUFjLElBQUMsT0FBTyxrQkFDckIsdUJBQUMsZUFBTSxJQUFDLE9BQU8sRUFBQyxTQUFTLDZCQUFzQixHQUNoQyxFQUNqQix1QkFBQyx3QkFBYyxJQUFDLFNBQVMsRUFBQyxNQUFNLEVBQUMsS0FBSyxFQUFDLE9BQU8sWUFDNUMsaUNBQUssU0FBUyxFQUFDLFlBQVksYUFDekIsaUNBQUssU0FBUyxFQUFDLGNBQWMsYUFDM0IsK0JBQUksU0FBUyxFQUFDLDBCQUEwQiwyQkFBZ0IsRUFDeEQsOEJBQUcsU0FBUyxFQUFDLCtCQUErQixrREFFeEMsSUFDQSxFQUNOLGlDQUFLLFNBQVMsRUFBQyxZQUFZLGFBQ3pCLGlDQUFLLFNBQVMsRUFBQyxxQ0FBcUMsYUFDbEQsdUJBQUMsYUFBSyxJQUFDLE9BQU8sRUFBQyxPQUFPLHNCQUFjLEVBQ3BDLHVCQUFDLGFBQUssSUFDSixFQUFFLEVBQUMsT0FBTyxFQUNWLFlBQVksRUFBQyxNQUFNLEVBQ25CLFNBQVMsRUFBQyxnQkFBZ0IsR0FDMUIsSUFDRSxFQUNOLGlDQUFLLFNBQVMsRUFBQyxxQ0FBcUMsYUFDbEQsdUJBQUMsYUFBSyxJQUFDLE9BQU8sRUFBQyxVQUFVLDJCQUFtQixFQUM1Qyx1QkFBQyxhQUFLLElBQ0osRUFBRSxFQUFDLFVBQVUsRUFDYixZQUFZLEVBQUMsT0FBTyxFQUNwQixTQUFTLEVBQUMsZ0JBQWdCLEdBQzFCLElBQ0UsRUFDTixpQ0FBSyxTQUFTLEVBQUMscUNBQXFDLGFBQ2xELHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUMsUUFBUSx1QkFBZSxFQUN0Qyx1QkFBQyxhQUFLLElBQ0osRUFBRSxFQUFDLFFBQVEsRUFDWCxZQUFZLEVBQUMsTUFBTSxFQUNuQixTQUFTLEVBQUMsZ0JBQWdCLEdBQzFCLElBQ0UsRUFDTixpQ0FBSyxTQUFTLEVBQUMscUNBQXFDLGFBQ2xELHVCQUFDLGFBQUssSUFBQyxPQUFPLEVBQUMsV0FBVyw0QkFBb0IsRUFDOUMsdUJBQUMsYUFBSyxJQUNKLEVBQUUsRUFBQyxXQUFXLEVBQ2QsWUFBWSxFQUFDLE1BQU0sRUFDbkIsU0FBUyxFQUFDLGdCQUFnQixHQUMxQixJQUNFLElBQ0YsSUFDRixHQUNTLElBQ1QsQ0FDWCxDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1dHRvbiB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvYnV0dG9uXCI7XG5pbXBvcnQgeyBJbnB1dCB9IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvaW5wdXRcIjtcbmltcG9ydCB7IExhYmVsIH0gZnJvbSBcIkAvY29tcG9uZW50cy91aS9sYWJlbFwiO1xuaW1wb3J0IHtcbiAgUG9wb3ZlcixcbiAgUG9wb3ZlckNvbnRlbnQsXG4gIFBvcG92ZXJUcmlnZ2VyLFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3BvcG92ZXJcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFBvcG92ZXJEZW1vKCkge1xuICByZXR1cm4gKFxuICAgIDxQb3BvdmVyPlxuICAgICAgPFBvcG92ZXJUcmlnZ2VyIGFzQ2hpbGQ+XG4gICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIj5PcGVuIHBvcG92ZXI8L0J1dHRvbj5cbiAgICAgIDwvUG9wb3ZlclRyaWdnZXI+XG4gICAgICA8UG9wb3ZlckNvbnRlbnQgY2xhc3NOYW1lPVwidy04MFwiIGFsaWduPVwic3RhcnRcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC00XCI+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdhcC0xLjVcIj5cbiAgICAgICAgICAgIDxoNCBjbGFzc05hbWU9XCJsZWFkaW5nLW5vbmUgZm9udC1tZWRpdW1cIj5EaW1lbnNpb25zPC9oND5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZCB0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgIFNldCB0aGUgZGltZW5zaW9ucyBmb3IgdGhlIGxheWVyLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBnYXAtMlwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0zIGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgICAgICAgICA8TGFiZWwgaHRtbEZvcj1cIndpZHRoXCI+V2lkdGg8L0xhYmVsPlxuICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICBpZD1cIndpZHRoXCJcbiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9XCIxMDAlXCJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjb2wtc3Bhbi0yIGgtOFwiXG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMyBpdGVtcy1jZW50ZXIgZ2FwLTRcIj5cbiAgICAgICAgICAgICAgPExhYmVsIGh0bWxGb3I9XCJtYXhXaWR0aFwiPk1heC4gd2lkdGg8L0xhYmVsPlxuICAgICAgICAgICAgICA8SW5wdXRcbiAgICAgICAgICAgICAgICBpZD1cIm1heFdpZHRoXCJcbiAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU9XCIzMDBweFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY29sLXNwYW4tMiBoLThcIlxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ3JpZC1jb2xzLTMgaXRlbXMtY2VudGVyIGdhcC00XCI+XG4gICAgICAgICAgICAgIDxMYWJlbCBodG1sRm9yPVwiaGVpZ2h0XCI+SGVpZ2h0PC9MYWJlbD5cbiAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgaWQ9XCJoZWlnaHRcIlxuICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT1cIjI1cHhcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbC1zcGFuLTIgaC04XCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0zIGl0ZW1zLWNlbnRlciBnYXAtNFwiPlxuICAgICAgICAgICAgICA8TGFiZWwgaHRtbEZvcj1cIm1heEhlaWdodFwiPk1heC4gaGVpZ2h0PC9MYWJlbD5cbiAgICAgICAgICAgICAgPElucHV0XG4gICAgICAgICAgICAgICAgaWQ9XCJtYXhIZWlnaHRcIlxuICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZT1cIm5vbmVcIlxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvbC1zcGFuLTIgaC04XCJcbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvUG9wb3ZlckNvbnRlbnQ+XG4gICAgPC9Qb3BvdmVyPlxuICApO1xufVxuIl19