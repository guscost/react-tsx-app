define(["require", "exports", "react/jsx-runtime", "lucide-react", "@/components/ui/button", "@/components/ui/tooltip"], function (require, exports, jsx_runtime_1, lucide_react_1, button_1, tooltip_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TooltipDemo = TooltipDemo;
    function TooltipDemo() {
        return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-6 md:flex-row", children: [(0, jsx_runtime_1.jsxs)(tooltip_1.Tooltip, { children: [(0, jsx_runtime_1.jsx)(tooltip_1.TooltipTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", children: "Hover" }) }), (0, jsx_runtime_1.jsx)(tooltip_1.TooltipContent, { children: (0, jsx_runtime_1.jsx)("p", { children: "Add to library" }) })] }), (0, jsx_runtime_1.jsx)("div", { className: "flex gap-2", children: ["top", "right", "bottom", "left"].map((side) => ((0, jsx_runtime_1.jsxs)(tooltip_1.Tooltip, { children: [(0, jsx_runtime_1.jsx)(tooltip_1.TooltipTrigger, { asChild: true, children: (0, jsx_runtime_1.jsx)(button_1.Button, { variant: "outline", className: "capitalize", children: side }) }), (0, jsx_runtime_1.jsx)(tooltip_1.TooltipContent, { side: side, children: (0, jsx_runtime_1.jsx)("p", { children: "Add to library" }) })] }, side))) }), (0, jsx_runtime_1.jsxs)(tooltip_1.Tooltip, { children: [(0, jsx_runtime_1.jsx)(tooltip_1.TooltipTrigger, { asChild: true, children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "ghost", size: "icon", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.InfoIcon, {}), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "Info" })] }) }), (0, jsx_runtime_1.jsx)(tooltip_1.TooltipContent, { children: "To learn more about how this works, check out the docs. If you have any questions, please reach out to us." })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC1kZW1vLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZGVtby12NC90b29sdGlwLWRlbW8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztJQVNBLGtDQXVDQztJQXZDRCxTQUFnQixXQUFXO1FBQ3pCLE9BQU8sQ0FDTCxpQ0FBSyxTQUFTLEVBQUMsaUNBQWlDLGFBQzlDLHdCQUFDLGlCQUFPLGVBQ04sdUJBQUMsd0JBQWMsSUFBQyxPQUFPLGtCQUNyQix1QkFBQyxlQUFNLElBQUMsT0FBTyxFQUFDLFNBQVMsc0JBQWUsR0FDekIsRUFDakIsdUJBQUMsd0JBQWMsY0FDYiwyREFBcUIsR0FDTixJQUNULEVBQ1YsZ0NBQUssU0FBUyxFQUFDLFlBQVksWUFDeEIsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQ2hELHdCQUFDLGlCQUFPLGVBQ04sdUJBQUMsd0JBQWMsSUFBQyxPQUFPLGtCQUNyQix1QkFBQyxlQUFNLElBQUMsT0FBTyxFQUFDLFNBQVMsRUFBQyxTQUFTLEVBQUMsWUFBWSxZQUM3QyxJQUFJLEdBQ0UsR0FDTSxFQUNqQix1QkFBQyx3QkFBYyxJQUFDLElBQUksRUFBRSxJQUEyQyxZQUMvRCwyREFBcUIsR0FDTixLQVJMLElBQUksQ0FTUixDQUNYLENBQUMsR0FDRSxFQUNOLHdCQUFDLGlCQUFPLGVBQ04sdUJBQUMsd0JBQWMsSUFBQyxPQUFPLGtCQUNyQix3QkFBQyxlQUFNLElBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxJQUFJLEVBQUMsTUFBTSxhQUNqQyx1QkFBQyx1QkFBUSxLQUFHLEVBQ1osaUNBQU0sU0FBUyxFQUFDLFNBQVMscUJBQVksSUFDOUIsR0FDTSxFQUNqQix1QkFBQyx3QkFBYyw2SEFHRSxJQUNULElBQ04sQ0FDUCxDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluZm9JY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xuaW1wb3J0IHtcbiAgVG9vbHRpcCxcbiAgVG9vbHRpcENvbnRlbnQsXG4gIFRvb2x0aXBUcmlnZ2VyLFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL3Rvb2x0aXBcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIFRvb2x0aXBEZW1vKCkge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBnYXAtNiBtZDpmbGV4LXJvd1wiPlxuICAgICAgPFRvb2x0aXA+XG4gICAgICAgIDxUb29sdGlwVHJpZ2dlciBhc0NoaWxkPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIj5Ib3ZlcjwvQnV0dG9uPlxuICAgICAgICA8L1Rvb2x0aXBUcmlnZ2VyPlxuICAgICAgICA8VG9vbHRpcENvbnRlbnQ+XG4gICAgICAgICAgPHA+QWRkIHRvIGxpYnJhcnk8L3A+XG4gICAgICAgIDwvVG9vbHRpcENvbnRlbnQ+XG4gICAgICA8L1Rvb2x0aXA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZ2FwLTJcIj5cbiAgICAgICAge1tcInRvcFwiLCBcInJpZ2h0XCIsIFwiYm90dG9tXCIsIFwibGVmdFwiXS5tYXAoKHNpZGUpID0+IChcbiAgICAgICAgICA8VG9vbHRpcCBrZXk9e3NpZGV9PlxuICAgICAgICAgICAgPFRvb2x0aXBUcmlnZ2VyIGFzQ2hpbGQ+XG4gICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIiBjbGFzc05hbWU9XCJjYXBpdGFsaXplXCI+XG4gICAgICAgICAgICAgICAge3NpZGV9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9Ub29sdGlwVHJpZ2dlcj5cbiAgICAgICAgICAgIDxUb29sdGlwQ29udGVudCBzaWRlPXtzaWRlIGFzIFwidG9wXCIgfCBcInJpZ2h0XCIgfCBcImJvdHRvbVwiIHwgXCJsZWZ0XCJ9PlxuICAgICAgICAgICAgICA8cD5BZGQgdG8gbGlicmFyeTwvcD5cbiAgICAgICAgICAgIDwvVG9vbHRpcENvbnRlbnQ+XG4gICAgICAgICAgPC9Ub29sdGlwPlxuICAgICAgICApKX1cbiAgICAgIDwvZGl2PlxuICAgICAgPFRvb2x0aXA+XG4gICAgICAgIDxUb29sdGlwVHJpZ2dlciBhc0NoaWxkPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImdob3N0XCIgc2l6ZT1cImljb25cIj5cbiAgICAgICAgICAgIDxJbmZvSWNvbiAvPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPkluZm88L3NwYW4+XG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvVG9vbHRpcFRyaWdnZXI+XG4gICAgICAgIDxUb29sdGlwQ29udGVudD5cbiAgICAgICAgICBUbyBsZWFybiBtb3JlIGFib3V0IGhvdyB0aGlzIHdvcmtzLCBjaGVjayBvdXQgdGhlIGRvY3MuIElmIHlvdSBoYXZlXG4gICAgICAgICAgYW55IHF1ZXN0aW9ucywgcGxlYXNlIHJlYWNoIG91dCB0byB1cy5cbiAgICAgICAgPC9Ub29sdGlwQ29udGVudD5cbiAgICAgIDwvVG9vbHRpcD5cbiAgICA8L2Rpdj5cbiAgKTtcbn1cbiJdfQ==