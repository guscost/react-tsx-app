define(["require", "exports", "react/jsx-runtime", "react", "lucide-react", "next-themes", "@/hooks/use-meta-color", "@/components/ui/button"], function (require, exports, jsx_runtime_1, React, lucide_react_1, next_themes_1, use_meta_color_1, button_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ModeSwitcher = ModeSwitcher;
    function ModeSwitcher() {
        const { setTheme, resolvedTheme } = (0, next_themes_1.useTheme)();
        const { setMetaColor } = (0, use_meta_color_1.useMetaColor)();
        const toggleTheme = React.useCallback(() => {
            setTheme(resolvedTheme === "dark" ? "light" : "dark");
            setMetaColor(resolvedTheme === "dark"
                ? use_meta_color_1.META_THEME_COLORS.light
                : use_meta_color_1.META_THEME_COLORS.dark);
        }, [resolvedTheme, setTheme, setMetaColor]);
        return ((0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "ghost", className: "group/toggle h-8 w-8 px-0", onClick: toggleTheme, children: [(0, jsx_runtime_1.jsx)(lucide_react_1.SunIcon, { className: "hidden [html.dark_&]:block" }), (0, jsx_runtime_1.jsx)(lucide_react_1.MoonIcon, { className: "hidden [html.light_&]:block" }), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "Toggle theme" })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kZS1zd2l0Y2hlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2RlbW8tdjQvbW9kZS1zd2l0Y2hlci50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUFBLFlBQVksQ0FBQzs7O0lBU2Isb0NBd0JDO0lBeEJELFNBQWdCLFlBQVk7UUFDMUIsTUFBTSxFQUFFLFFBQVEsRUFBRSxhQUFhLEVBQUUsR0FBRyxJQUFBLHNCQUFRLEdBQUUsQ0FBQztRQUMvQyxNQUFNLEVBQUUsWUFBWSxFQUFFLEdBQUcsSUFBQSw2QkFBWSxHQUFFLENBQUM7UUFFeEMsTUFBTSxXQUFXLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUU7WUFDekMsUUFBUSxDQUFDLGFBQWEsS0FBSyxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDdEQsWUFBWSxDQUNWLGFBQWEsS0FBSyxNQUFNO2dCQUN0QixDQUFDLENBQUMsa0NBQWlCLENBQUMsS0FBSztnQkFDekIsQ0FBQyxDQUFDLGtDQUFpQixDQUFDLElBQUksQ0FDM0IsQ0FBQztRQUNKLENBQUMsRUFBRSxDQUFDLGFBQWEsRUFBRSxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQztRQUU1QyxPQUFPLENBQ0wsd0JBQUMsZUFBTSxJQUNMLE9BQU8sRUFBQyxPQUFPLEVBQ2YsU0FBUyxFQUFDLDJCQUEyQixFQUNyQyxPQUFPLEVBQUUsV0FBVyxhQUVwQix1QkFBQyxzQkFBTyxJQUFDLFNBQVMsRUFBQyw0QkFBNEIsR0FBRyxFQUNsRCx1QkFBQyx1QkFBUSxJQUFDLFNBQVMsRUFBQyw2QkFBNkIsR0FBRyxFQUNwRCxpQ0FBTSxTQUFTLEVBQUMsU0FBUyw2QkFBb0IsSUFDdEMsQ0FDVixDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IE1vb25JY29uLCBTdW5JY29uIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tIFwibmV4dC10aGVtZXNcIjtcblxuaW1wb3J0IHsgTUVUQV9USEVNRV9DT0xPUlMsIHVzZU1ldGFDb2xvciB9IGZyb20gXCJAL2hvb2tzL3VzZS1tZXRhLWNvbG9yXCI7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xuXG5leHBvcnQgZnVuY3Rpb24gTW9kZVN3aXRjaGVyKCkge1xuICBjb25zdCB7IHNldFRoZW1lLCByZXNvbHZlZFRoZW1lIH0gPSB1c2VUaGVtZSgpO1xuICBjb25zdCB7IHNldE1ldGFDb2xvciB9ID0gdXNlTWV0YUNvbG9yKCk7XG5cbiAgY29uc3QgdG9nZ2xlVGhlbWUgPSBSZWFjdC51c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgc2V0VGhlbWUocmVzb2x2ZWRUaGVtZSA9PT0gXCJkYXJrXCIgPyBcImxpZ2h0XCIgOiBcImRhcmtcIik7XG4gICAgc2V0TWV0YUNvbG9yKFxuICAgICAgcmVzb2x2ZWRUaGVtZSA9PT0gXCJkYXJrXCJcbiAgICAgICAgPyBNRVRBX1RIRU1FX0NPTE9SUy5saWdodFxuICAgICAgICA6IE1FVEFfVEhFTUVfQ09MT1JTLmRhcmssXG4gICAgKTtcbiAgfSwgW3Jlc29sdmVkVGhlbWUsIHNldFRoZW1lLCBzZXRNZXRhQ29sb3JdKTtcblxuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICBjbGFzc05hbWU9XCJncm91cC90b2dnbGUgaC04IHctOCBweC0wXCJcbiAgICAgIG9uQ2xpY2s9e3RvZ2dsZVRoZW1lfVxuICAgID5cbiAgICAgIDxTdW5JY29uIGNsYXNzTmFtZT1cImhpZGRlbiBbaHRtbC5kYXJrXyZdOmJsb2NrXCIgLz5cbiAgICAgIDxNb29uSWNvbiBjbGFzc05hbWU9XCJoaWRkZW4gW2h0bWwubGlnaHRfJl06YmxvY2tcIiAvPlxuICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3Itb25seVwiPlRvZ2dsZSB0aGVtZTwvc3Bhbj5cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn1cbiJdfQ==