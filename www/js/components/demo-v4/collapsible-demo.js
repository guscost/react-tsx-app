define(["require", "exports", "react/jsx-runtime", "react", "lucide-react", "@/components/ui/button", "@/components/ui/collapsible"], function (require, exports, jsx_runtime_1, React, lucide_react_1, button_1, collapsible_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.CollapsibleDemo = CollapsibleDemo;
    function CollapsibleDemo() {
        const [isOpen, setIsOpen] = React.useState(false);
        return ((0, jsx_runtime_1.jsxs)(collapsible_1.Collapsible, { open: isOpen, onOpenChange: setIsOpen, className: "flex w-full flex-col gap-2 md:w-[350px]", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-between gap-4 px-4", children: [(0, jsx_runtime_1.jsx)("h4", { className: "line-clamp-1 text-sm font-semibold", children: "@peduarte starred 3 repositories" }), (0, jsx_runtime_1.jsx)(collapsible_1.CollapsibleTrigger, { asChild: true, children: (0, jsx_runtime_1.jsxs)(button_1.Button, { variant: "ghost", size: "sm", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.ChevronsUpDown, { className: "h-4 w-4" }), (0, jsx_runtime_1.jsx)("span", { className: "sr-only", children: "Toggle" })] }) })] }), (0, jsx_runtime_1.jsx)("div", { className: "rounded-md border px-4 py-2 font-mono text-sm shadow-xs", children: "@radix-ui/primitives" }), (0, jsx_runtime_1.jsxs)(collapsible_1.CollapsibleContent, { className: "flex flex-col gap-2", children: [(0, jsx_runtime_1.jsx)("div", { className: "rounded-md border px-4 py-2 font-mono text-sm shadow-xs", children: "@radix-ui/colors" }), (0, jsx_runtime_1.jsx)("div", { className: "rounded-md border px-4 py-2 font-mono text-sm shadow-xs", children: "@stitches/react" })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGFwc2libGUtZGVtby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2RlbW8tdjQvY29sbGFwc2libGUtZGVtby50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUFBLFlBQVksQ0FBQzs7O0lBWWIsMENBaUNDO0lBakNELFNBQWdCLGVBQWU7UUFDN0IsTUFBTSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBRWxELE9BQU8sQ0FDTCx3QkFBQyx5QkFBVyxJQUNWLElBQUksRUFBRSxNQUFNLEVBQ1osWUFBWSxFQUFFLFNBQVMsRUFDdkIsU0FBUyxFQUFDLHlDQUF5QyxhQUVuRCxpQ0FBSyxTQUFTLEVBQUMsOENBQThDLGFBQzNELCtCQUFJLFNBQVMsRUFBQyxvQ0FBb0MsaURBRTdDLEVBQ0wsdUJBQUMsZ0NBQWtCLElBQUMsT0FBTyxrQkFDekIsd0JBQUMsZUFBTSxJQUFDLE9BQU8sRUFBQyxPQUFPLEVBQUMsSUFBSSxFQUFDLElBQUksYUFDL0IsdUJBQUMsNkJBQWMsSUFBQyxTQUFTLEVBQUMsU0FBUyxHQUFHLEVBQ3RDLGlDQUFNLFNBQVMsRUFBQyxTQUFTLHVCQUFjLElBQ2hDLEdBQ1UsSUFDakIsRUFDTixnQ0FBSyxTQUFTLEVBQUMseURBQXlELHFDQUVsRSxFQUNOLHdCQUFDLGdDQUFrQixJQUFDLFNBQVMsRUFBQyxxQkFBcUIsYUFDakQsZ0NBQUssU0FBUyxFQUFDLHlEQUF5RCxpQ0FFbEUsRUFDTixnQ0FBSyxTQUFTLEVBQUMseURBQXlELGdDQUVsRSxJQUNhLElBQ1QsQ0FDZixDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IENoZXZyb25zVXBEb3duIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuXG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2J1dHRvblwiO1xuaW1wb3J0IHtcbiAgQ29sbGFwc2libGUsXG4gIENvbGxhcHNpYmxlQ29udGVudCxcbiAgQ29sbGFwc2libGVUcmlnZ2VyLFxufSBmcm9tIFwiQC9jb21wb25lbnRzL3VpL2NvbGxhcHNpYmxlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBDb2xsYXBzaWJsZURlbW8oKSB7XG4gIGNvbnN0IFtpc09wZW4sIHNldElzT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29sbGFwc2libGVcbiAgICAgIG9wZW49e2lzT3Blbn1cbiAgICAgIG9uT3BlbkNoYW5nZT17c2V0SXNPcGVufVxuICAgICAgY2xhc3NOYW1lPVwiZmxleCB3LWZ1bGwgZmxleC1jb2wgZ2FwLTIgbWQ6dy1bMzUwcHhdXCJcbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBnYXAtNCBweC00XCI+XG4gICAgICAgIDxoNCBjbGFzc05hbWU9XCJsaW5lLWNsYW1wLTEgdGV4dC1zbSBmb250LXNlbWlib2xkXCI+XG4gICAgICAgICAgQHBlZHVhcnRlIHN0YXJyZWQgMyByZXBvc2l0b3JpZXNcbiAgICAgICAgPC9oND5cbiAgICAgICAgPENvbGxhcHNpYmxlVHJpZ2dlciBhc0NoaWxkPlxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImdob3N0XCIgc2l6ZT1cInNtXCI+XG4gICAgICAgICAgICA8Q2hldnJvbnNVcERvd24gY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJzci1vbmx5XCI+VG9nZ2xlPC9zcGFuPlxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L0NvbGxhcHNpYmxlVHJpZ2dlcj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3VuZGVkLW1kIGJvcmRlciBweC00IHB5LTIgZm9udC1tb25vIHRleHQtc20gc2hhZG93LXhzXCI+XG4gICAgICAgIEByYWRpeC11aS9wcmltaXRpdmVzXG4gICAgICA8L2Rpdj5cbiAgICAgIDxDb2xsYXBzaWJsZUNvbnRlbnQgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBnYXAtMlwiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdW5kZWQtbWQgYm9yZGVyIHB4LTQgcHktMiBmb250LW1vbm8gdGV4dC1zbSBzaGFkb3cteHNcIj5cbiAgICAgICAgICBAcmFkaXgtdWkvY29sb3JzXG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvdW5kZWQtbWQgYm9yZGVyIHB4LTQgcHktMiBmb250LW1vbm8gdGV4dC1zbSBzaGFkb3cteHNcIj5cbiAgICAgICAgICBAc3RpdGNoZXMvcmVhY3RcbiAgICAgICAgPC9kaXY+XG4gICAgICA8L0NvbGxhcHNpYmxlQ29udGVudD5cbiAgICA8L0NvbGxhcHNpYmxlPlxuICApO1xufVxuIl19