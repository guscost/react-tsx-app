define(["require", "exports", "react/jsx-runtime", "lucide-react", "recharts", "@/components/ui/card", "@/components/ui/chart"], function (require, exports, jsx_runtime_1, lucide_react_1, recharts_1, card_1, chart_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.description = void 0;
    exports.ChartAreaDemo = ChartAreaDemo;
    exports.description = "A simple area chart";
    const chartData = [
        { month: "January", desktop: 186 },
        { month: "February", desktop: 305 },
        { month: "March", desktop: 237 },
        { month: "April", desktop: 73 },
        { month: "May", desktop: 209 },
        { month: "June", desktop: 214 },
    ];
    const chartConfig = {
        desktop: {
            label: "Desktop",
            color: "var(--chart-1)",
        },
    };
    function ChartAreaDemo() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Area Chart" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "Showing total visitors for the last 6 months" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)(chart_1.ChartContainer, { config: chartConfig, children: (0, jsx_runtime_1.jsxs)(recharts_1.AreaChart, { accessibilityLayer: true, data: chartData, margin: {
                                left: 12,
                                right: 12,
                            }, children: [(0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { vertical: false }), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "month", tickLine: false, axisLine: false, tickMargin: 8, tickFormatter: (value) => value.slice(0, 3) }), (0, jsx_runtime_1.jsx)(chart_1.ChartTooltip, { cursor: false, content: (0, jsx_runtime_1.jsx)(chart_1.ChartTooltipContent, { indicator: "line" }) }), (0, jsx_runtime_1.jsx)(recharts_1.Area, { dataKey: "desktop", type: "natural", fill: "var(--color-desktop)", fillOpacity: 0.4, stroke: "var(--color-desktop)" })] }) }) }), (0, jsx_runtime_1.jsx)(card_1.CardFooter, { children: (0, jsx_runtime_1.jsx)("div", { className: "flex w-full items-start gap-2 text-sm", children: (0, jsx_runtime_1.jsxs)("div", { className: "grid gap-2", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex items-center gap-2 leading-none font-medium", children: ["Trending up by 5.2% this month ", (0, jsx_runtime_1.jsx)(lucide_react_1.TrendingUp, { className: "h-4 w-4" })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-muted-foreground flex items-center gap-2 leading-none", children: "January - June 2024" })] }) }) })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtYXJlYS1kZW1vLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvZGVtby12NC9jaGFydC1hcmVhLWRlbW8udHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7SUFBQSxZQUFZLENBQUM7Ozs7SUFzQ2Isc0NBdURDO0lBekVZLFFBQUEsV0FBVyxHQUFHLHFCQUFxQixDQUFDO0lBRWpELE1BQU0sU0FBUyxHQUFHO1FBQ2hCLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ2xDLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ25DLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQ2hDLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBRSxFQUFFO1FBQy9CLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO1FBQzlCLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFO0tBQ2hDLENBQUM7SUFFRixNQUFNLFdBQVcsR0FBRztRQUNsQixPQUFPLEVBQUU7WUFDUCxLQUFLLEVBQUUsU0FBUztZQUNoQixLQUFLLEVBQUUsZ0JBQWdCO1NBQ3hCO0tBQ29CLENBQUM7SUFFeEIsU0FBZ0IsYUFBYTtRQUMzQixPQUFPLENBQ0wsd0JBQUMsV0FBSSxlQUNILHdCQUFDLGlCQUFVLGVBQ1QsdUJBQUMsZ0JBQVMsNkJBQXVCLEVBQ2pDLHVCQUFDLHNCQUFlLCtEQUVFLElBQ1AsRUFDYix1QkFBQyxrQkFBVyxjQUNWLHVCQUFDLHNCQUFjLElBQUMsTUFBTSxFQUFFLFdBQVcsWUFDakMsd0JBQUMsb0JBQVMsSUFDUixrQkFBa0IsUUFDbEIsSUFBSSxFQUFFLFNBQVMsRUFDZixNQUFNLEVBQUU7Z0NBQ04sSUFBSSxFQUFFLEVBQUU7Z0NBQ1IsS0FBSyxFQUFFLEVBQUU7NkJBQ1YsYUFFRCx1QkFBQyx3QkFBYSxJQUFDLFFBQVEsRUFBRSxLQUFLLEdBQUksRUFDbEMsdUJBQUMsZ0JBQUssSUFDSixPQUFPLEVBQUMsT0FBTyxFQUNmLFFBQVEsRUFBRSxLQUFLLEVBQ2YsUUFBUSxFQUFFLEtBQUssRUFDZixVQUFVLEVBQUUsQ0FBQyxFQUNiLGFBQWEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQzNDLEVBQ0YsdUJBQUMsb0JBQVksSUFDWCxNQUFNLEVBQUUsS0FBSyxFQUNiLE9BQU8sRUFBRSx1QkFBQywyQkFBbUIsSUFBQyxTQUFTLEVBQUMsTUFBTSxHQUFHLEdBQ2pELEVBQ0YsdUJBQUMsZUFBSSxJQUNILE9BQU8sRUFBQyxTQUFTLEVBQ2pCLElBQUksRUFBQyxTQUFTLEVBQ2QsSUFBSSxFQUFDLHNCQUFzQixFQUMzQixXQUFXLEVBQUUsR0FBRyxFQUNoQixNQUFNLEVBQUMsc0JBQXNCLEdBQzdCLElBQ1EsR0FDRyxHQUNMLEVBQ2QsdUJBQUMsaUJBQVUsY0FDVCxnQ0FBSyxTQUFTLEVBQUMsdUNBQXVDLFlBQ3BELGlDQUFLLFNBQVMsRUFBQyxZQUFZLGFBQ3pCLGlDQUFLLFNBQVMsRUFBQyxrREFBa0QsZ0RBQ2hDLHVCQUFDLHlCQUFVLElBQUMsU0FBUyxFQUFDLFNBQVMsR0FBRyxJQUM3RCxFQUNOLGdDQUFLLFNBQVMsRUFBQyw0REFBNEQsb0NBRXJFLElBQ0YsR0FDRixHQUNLLElBQ1IsQ0FDUixDQUFDO0lBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBUcmVuZGluZ1VwIH0gZnJvbSBcImx1Y2lkZS1yZWFjdFwiO1xuaW1wb3J0IHsgQXJlYSwgQXJlYUNoYXJ0LCBDYXJ0ZXNpYW5HcmlkLCBYQXhpcyB9IGZyb20gXCJyZWNoYXJ0c1wiO1xuXG5pbXBvcnQge1xuICBDYXJkLFxuICBDYXJkQ29udGVudCxcbiAgQ2FyZERlc2NyaXB0aW9uLFxuICBDYXJkRm9vdGVyLFxuICBDYXJkSGVhZGVyLFxuICBDYXJkVGl0bGUsXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHtcbiAgQ2hhcnRDb25maWcsXG4gIENoYXJ0Q29udGFpbmVyLFxuICBDaGFydFRvb2x0aXAsXG4gIENoYXJ0VG9vbHRpcENvbnRlbnQsXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2hhcnRcIjtcblxuZXhwb3J0IGNvbnN0IGRlc2NyaXB0aW9uID0gXCJBIHNpbXBsZSBhcmVhIGNoYXJ0XCI7XG5cbmNvbnN0IGNoYXJ0RGF0YSA9IFtcbiAgeyBtb250aDogXCJKYW51YXJ5XCIsIGRlc2t0b3A6IDE4NiB9LFxuICB7IG1vbnRoOiBcIkZlYnJ1YXJ5XCIsIGRlc2t0b3A6IDMwNSB9LFxuICB7IG1vbnRoOiBcIk1hcmNoXCIsIGRlc2t0b3A6IDIzNyB9LFxuICB7IG1vbnRoOiBcIkFwcmlsXCIsIGRlc2t0b3A6IDczIH0sXG4gIHsgbW9udGg6IFwiTWF5XCIsIGRlc2t0b3A6IDIwOSB9LFxuICB7IG1vbnRoOiBcIkp1bmVcIiwgZGVza3RvcDogMjE0IH0sXG5dO1xuXG5jb25zdCBjaGFydENvbmZpZyA9IHtcbiAgZGVza3RvcDoge1xuICAgIGxhYmVsOiBcIkRlc2t0b3BcIixcbiAgICBjb2xvcjogXCJ2YXIoLS1jaGFydC0xKVwiLFxuICB9LFxufSBzYXRpc2ZpZXMgQ2hhcnRDb25maWc7XG5cbmV4cG9ydCBmdW5jdGlvbiBDaGFydEFyZWFEZW1vKCkge1xuICByZXR1cm4gKFxuICAgIDxDYXJkPlxuICAgICAgPENhcmRIZWFkZXI+XG4gICAgICAgIDxDYXJkVGl0bGU+QXJlYSBDaGFydDwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgIFNob3dpbmcgdG90YWwgdmlzaXRvcnMgZm9yIHRoZSBsYXN0IDYgbW9udGhzXG4gICAgICAgIDwvQ2FyZERlc2NyaXB0aW9uPlxuICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICA8Q2hhcnRDb250YWluZXIgY29uZmlnPXtjaGFydENvbmZpZ30+XG4gICAgICAgICAgPEFyZWFDaGFydFxuICAgICAgICAgICAgYWNjZXNzaWJpbGl0eUxheWVyXG4gICAgICAgICAgICBkYXRhPXtjaGFydERhdGF9XG4gICAgICAgICAgICBtYXJnaW49e3tcbiAgICAgICAgICAgICAgbGVmdDogMTIsXG4gICAgICAgICAgICAgIHJpZ2h0OiAxMixcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPENhcnRlc2lhbkdyaWQgdmVydGljYWw9e2ZhbHNlfSAvPlxuICAgICAgICAgICAgPFhBeGlzXG4gICAgICAgICAgICAgIGRhdGFLZXk9XCJtb250aFwiXG4gICAgICAgICAgICAgIHRpY2tMaW5lPXtmYWxzZX1cbiAgICAgICAgICAgICAgYXhpc0xpbmU9e2ZhbHNlfVxuICAgICAgICAgICAgICB0aWNrTWFyZ2luPXs4fVxuICAgICAgICAgICAgICB0aWNrRm9ybWF0dGVyPXsodmFsdWUpID0+IHZhbHVlLnNsaWNlKDAsIDMpfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxDaGFydFRvb2x0aXBcbiAgICAgICAgICAgICAgY3Vyc29yPXtmYWxzZX1cbiAgICAgICAgICAgICAgY29udGVudD17PENoYXJ0VG9vbHRpcENvbnRlbnQgaW5kaWNhdG9yPVwibGluZVwiIC8+fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxBcmVhXG4gICAgICAgICAgICAgIGRhdGFLZXk9XCJkZXNrdG9wXCJcbiAgICAgICAgICAgICAgdHlwZT1cIm5hdHVyYWxcIlxuICAgICAgICAgICAgICBmaWxsPVwidmFyKC0tY29sb3ItZGVza3RvcClcIlxuICAgICAgICAgICAgICBmaWxsT3BhY2l0eT17MC40fVxuICAgICAgICAgICAgICBzdHJva2U9XCJ2YXIoLS1jb2xvci1kZXNrdG9wKVwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvQXJlYUNoYXJ0PlxuICAgICAgICA8L0NoYXJ0Q29udGFpbmVyPlxuICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgIDxDYXJkRm9vdGVyPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggdy1mdWxsIGl0ZW1zLXN0YXJ0IGdhcC0yIHRleHQtc21cIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImdyaWQgZ2FwLTJcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgbGVhZGluZy1ub25lIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgICAgICAgIFRyZW5kaW5nIHVwIGJ5IDUuMiUgdGhpcyBtb250aCA8VHJlbmRpbmdVcCBjbGFzc05hbWU9XCJoLTQgdy00XCIgLz5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LW11dGVkLWZvcmVncm91bmQgZmxleCBpdGVtcy1jZW50ZXIgZ2FwLTIgbGVhZGluZy1ub25lXCI+XG4gICAgICAgICAgICAgIEphbnVhcnkgLSBKdW5lIDIwMjRcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQ2FyZEZvb3Rlcj5cbiAgICA8L0NhcmQ+XG4gICk7XG59XG4iXX0=