define(["require", "exports", "react/jsx-runtime", "lucide-react", "recharts", "@/components/ui/card", "@/components/ui/chart"], function (require, exports, jsx_runtime_1, lucide_react_1, recharts_1, card_1, chart_1) {
    "use client";
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.description = void 0;
    exports.ChartBarDemo = ChartBarDemo;
    exports.description = "A multiple bar chart";
    const chartData = [
        { month: "January", desktop: 186, mobile: 80 },
        { month: "February", desktop: 305, mobile: 200 },
        { month: "March", desktop: 237, mobile: 120 },
        { month: "April", desktop: 73, mobile: 190 },
        { month: "May", desktop: 209, mobile: 130 },
        { month: "June", desktop: 214, mobile: 140 },
    ];
    const chartConfig = {
        desktop: {
            label: "Desktop",
            color: "var(--chart-1)",
        },
        mobile: {
            label: "Mobile",
            color: "var(--chart-2)",
        },
    };
    function ChartBarDemo() {
        return ((0, jsx_runtime_1.jsxs)(card_1.Card, { children: [(0, jsx_runtime_1.jsxs)(card_1.CardHeader, { children: [(0, jsx_runtime_1.jsx)(card_1.CardTitle, { children: "Bar Chart - Multiple" }), (0, jsx_runtime_1.jsx)(card_1.CardDescription, { children: "January - June 2024" })] }), (0, jsx_runtime_1.jsx)(card_1.CardContent, { children: (0, jsx_runtime_1.jsx)(chart_1.ChartContainer, { config: chartConfig, children: (0, jsx_runtime_1.jsxs)(recharts_1.BarChart, { accessibilityLayer: true, data: chartData, children: [(0, jsx_runtime_1.jsx)(recharts_1.CartesianGrid, { vertical: false }), (0, jsx_runtime_1.jsx)(recharts_1.XAxis, { dataKey: "month", tickLine: false, tickMargin: 10, axisLine: false, tickFormatter: (value) => value.slice(0, 3) }), (0, jsx_runtime_1.jsx)(chart_1.ChartTooltip, { cursor: false, content: (0, jsx_runtime_1.jsx)(chart_1.ChartTooltipContent, { indicator: "dashed" }) }), (0, jsx_runtime_1.jsx)(recharts_1.Bar, { dataKey: "desktop", fill: "var(--color-desktop)", radius: 4 }), (0, jsx_runtime_1.jsx)(recharts_1.Bar, { dataKey: "mobile", fill: "var(--color-mobile)", radius: 4 })] }) }) }), (0, jsx_runtime_1.jsxs)(card_1.CardFooter, { className: "flex-col items-start gap-2 text-sm", children: [(0, jsx_runtime_1.jsxs)("div", { className: "flex gap-2 leading-none font-medium", children: ["Trending up by 5.2% this month ", (0, jsx_runtime_1.jsx)(lucide_react_1.TrendingUp, { className: "h-4 w-4" })] }), (0, jsx_runtime_1.jsx)("div", { className: "text-muted-foreground leading-none", children: "Showing total visitors for the last 6 months" })] })] }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtYmFyLWRlbW8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9kZW1vLXY0L2NoYXJ0LWJhci1kZW1vLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0lBQUEsWUFBWSxDQUFDOzs7O0lBMENiLG9DQXFDQztJQTNEWSxRQUFBLFdBQVcsR0FBRyxzQkFBc0IsQ0FBQztJQUVsRCxNQUFNLFNBQVMsR0FBRztRQUNoQixFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFO1FBQzlDLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7UUFDaEQsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtRQUM3QyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFO1FBQzVDLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUU7UUFDM0MsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRTtLQUM3QyxDQUFDO0lBRUYsTUFBTSxXQUFXLEdBQUc7UUFDbEIsT0FBTyxFQUFFO1lBQ1AsS0FBSyxFQUFFLFNBQVM7WUFDaEIsS0FBSyxFQUFFLGdCQUFnQjtTQUN4QjtRQUNELE1BQU0sRUFBRTtZQUNOLEtBQUssRUFBRSxRQUFRO1lBQ2YsS0FBSyxFQUFFLGdCQUFnQjtTQUN4QjtLQUNvQixDQUFDO0lBRXhCLFNBQWdCLFlBQVk7UUFDMUIsT0FBTyxDQUNMLHdCQUFDLFdBQUksZUFDSCx3QkFBQyxpQkFBVSxlQUNULHVCQUFDLGdCQUFTLHVDQUFpQyxFQUMzQyx1QkFBQyxzQkFBZSxzQ0FBc0MsSUFDM0MsRUFDYix1QkFBQyxrQkFBVyxjQUNWLHVCQUFDLHNCQUFjLElBQUMsTUFBTSxFQUFFLFdBQVcsWUFDakMsd0JBQUMsbUJBQVEsSUFBQyxrQkFBa0IsUUFBQyxJQUFJLEVBQUUsU0FBUyxhQUMxQyx1QkFBQyx3QkFBYSxJQUFDLFFBQVEsRUFBRSxLQUFLLEdBQUksRUFDbEMsdUJBQUMsZ0JBQUssSUFDSixPQUFPLEVBQUMsT0FBTyxFQUNmLFFBQVEsRUFBRSxLQUFLLEVBQ2YsVUFBVSxFQUFFLEVBQUUsRUFDZCxRQUFRLEVBQUUsS0FBSyxFQUNmLGFBQWEsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQzNDLEVBQ0YsdUJBQUMsb0JBQVksSUFDWCxNQUFNLEVBQUUsS0FBSyxFQUNiLE9BQU8sRUFBRSx1QkFBQywyQkFBbUIsSUFBQyxTQUFTLEVBQUMsUUFBUSxHQUFHLEdBQ25ELEVBQ0YsdUJBQUMsY0FBRyxJQUFDLE9BQU8sRUFBQyxTQUFTLEVBQUMsSUFBSSxFQUFDLHNCQUFzQixFQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUksRUFDaEUsdUJBQUMsY0FBRyxJQUFDLE9BQU8sRUFBQyxRQUFRLEVBQUMsSUFBSSxFQUFDLHFCQUFxQixFQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUksSUFDckQsR0FDSSxHQUNMLEVBQ2Qsd0JBQUMsaUJBQVUsSUFBQyxTQUFTLEVBQUMsb0NBQW9DLGFBQ3hELGlDQUFLLFNBQVMsRUFBQyxxQ0FBcUMsZ0RBQ25CLHVCQUFDLHlCQUFVLElBQUMsU0FBUyxFQUFDLFNBQVMsR0FBRyxJQUM3RCxFQUNOLGdDQUFLLFNBQVMsRUFBQyxvQ0FBb0MsNkRBRTdDLElBQ0ssSUFDUixDQUNSLENBQUM7SUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IFRyZW5kaW5nVXAgfSBmcm9tIFwibHVjaWRlLXJlYWN0XCI7XG5pbXBvcnQgeyBCYXIsIEJhckNoYXJ0LCBDYXJ0ZXNpYW5HcmlkLCBYQXhpcyB9IGZyb20gXCJyZWNoYXJ0c1wiO1xuXG5pbXBvcnQge1xuICBDYXJkLFxuICBDYXJkQ29udGVudCxcbiAgQ2FyZERlc2NyaXB0aW9uLFxuICBDYXJkRm9vdGVyLFxuICBDYXJkSGVhZGVyLFxuICBDYXJkVGl0bGUsXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2FyZFwiO1xuaW1wb3J0IHtcbiAgQ2hhcnRDb25maWcsXG4gIENoYXJ0Q29udGFpbmVyLFxuICBDaGFydFRvb2x0aXAsXG4gIENoYXJ0VG9vbHRpcENvbnRlbnQsXG59IGZyb20gXCJAL2NvbXBvbmVudHMvdWkvY2hhcnRcIjtcblxuZXhwb3J0IGNvbnN0IGRlc2NyaXB0aW9uID0gXCJBIG11bHRpcGxlIGJhciBjaGFydFwiO1xuXG5jb25zdCBjaGFydERhdGEgPSBbXG4gIHsgbW9udGg6IFwiSmFudWFyeVwiLCBkZXNrdG9wOiAxODYsIG1vYmlsZTogODAgfSxcbiAgeyBtb250aDogXCJGZWJydWFyeVwiLCBkZXNrdG9wOiAzMDUsIG1vYmlsZTogMjAwIH0sXG4gIHsgbW9udGg6IFwiTWFyY2hcIiwgZGVza3RvcDogMjM3LCBtb2JpbGU6IDEyMCB9LFxuICB7IG1vbnRoOiBcIkFwcmlsXCIsIGRlc2t0b3A6IDczLCBtb2JpbGU6IDE5MCB9LFxuICB7IG1vbnRoOiBcIk1heVwiLCBkZXNrdG9wOiAyMDksIG1vYmlsZTogMTMwIH0sXG4gIHsgbW9udGg6IFwiSnVuZVwiLCBkZXNrdG9wOiAyMTQsIG1vYmlsZTogMTQwIH0sXG5dO1xuXG5jb25zdCBjaGFydENvbmZpZyA9IHtcbiAgZGVza3RvcDoge1xuICAgIGxhYmVsOiBcIkRlc2t0b3BcIixcbiAgICBjb2xvcjogXCJ2YXIoLS1jaGFydC0xKVwiLFxuICB9LFxuICBtb2JpbGU6IHtcbiAgICBsYWJlbDogXCJNb2JpbGVcIixcbiAgICBjb2xvcjogXCJ2YXIoLS1jaGFydC0yKVwiLFxuICB9LFxufSBzYXRpc2ZpZXMgQ2hhcnRDb25maWc7XG5cbmV4cG9ydCBmdW5jdGlvbiBDaGFydEJhckRlbW8oKSB7XG4gIHJldHVybiAoXG4gICAgPENhcmQ+XG4gICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgPENhcmRUaXRsZT5CYXIgQ2hhcnQgLSBNdWx0aXBsZTwvQ2FyZFRpdGxlPlxuICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPkphbnVhcnkgLSBKdW5lIDIwMjQ8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgIDxDYXJkQ29udGVudD5cbiAgICAgICAgPENoYXJ0Q29udGFpbmVyIGNvbmZpZz17Y2hhcnRDb25maWd9PlxuICAgICAgICAgIDxCYXJDaGFydCBhY2Nlc3NpYmlsaXR5TGF5ZXIgZGF0YT17Y2hhcnREYXRhfT5cbiAgICAgICAgICAgIDxDYXJ0ZXNpYW5HcmlkIHZlcnRpY2FsPXtmYWxzZX0gLz5cbiAgICAgICAgICAgIDxYQXhpc1xuICAgICAgICAgICAgICBkYXRhS2V5PVwibW9udGhcIlxuICAgICAgICAgICAgICB0aWNrTGluZT17ZmFsc2V9XG4gICAgICAgICAgICAgIHRpY2tNYXJnaW49ezEwfVxuICAgICAgICAgICAgICBheGlzTGluZT17ZmFsc2V9XG4gICAgICAgICAgICAgIHRpY2tGb3JtYXR0ZXI9eyh2YWx1ZSkgPT4gdmFsdWUuc2xpY2UoMCwgMyl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPENoYXJ0VG9vbHRpcFxuICAgICAgICAgICAgICBjdXJzb3I9e2ZhbHNlfVxuICAgICAgICAgICAgICBjb250ZW50PXs8Q2hhcnRUb29sdGlwQ29udGVudCBpbmRpY2F0b3I9XCJkYXNoZWRcIiAvPn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8QmFyIGRhdGFLZXk9XCJkZXNrdG9wXCIgZmlsbD1cInZhcigtLWNvbG9yLWRlc2t0b3ApXCIgcmFkaXVzPXs0fSAvPlxuICAgICAgICAgICAgPEJhciBkYXRhS2V5PVwibW9iaWxlXCIgZmlsbD1cInZhcigtLWNvbG9yLW1vYmlsZSlcIiByYWRpdXM9ezR9IC8+XG4gICAgICAgICAgPC9CYXJDaGFydD5cbiAgICAgICAgPC9DaGFydENvbnRhaW5lcj5cbiAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICA8Q2FyZEZvb3RlciBjbGFzc05hbWU9XCJmbGV4LWNvbCBpdGVtcy1zdGFydCBnYXAtMiB0ZXh0LXNtXCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMiBsZWFkaW5nLW5vbmUgZm9udC1tZWRpdW1cIj5cbiAgICAgICAgICBUcmVuZGluZyB1cCBieSA1LjIlIHRoaXMgbW9udGggPFRyZW5kaW5nVXAgY2xhc3NOYW1lPVwiaC00IHctNFwiIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZCBsZWFkaW5nLW5vbmVcIj5cbiAgICAgICAgICBTaG93aW5nIHRvdGFsIHZpc2l0b3JzIGZvciB0aGUgbGFzdCA2IG1vbnRoc1xuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQ2FyZEZvb3Rlcj5cbiAgICA8L0NhcmQ+XG4gICk7XG59XG4iXX0=